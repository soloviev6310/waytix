<%+themes/bootstrap/header%>

<div class="cbi-map">
    <div class="cbi-section">
        <h3><%:Waytix VPN%></h3>
        
        <div class="cbi-section-node">
            <div class="table">
                <div class="tr">
                    <div class="td left" width="33%"><%:Ссылка на подписку:%></div>
                    <div class="td left">
                        <input type="text" id="sub-link" class="cbi-input-text" style="width: 300px" 
                               value="<%=luci.model.uci.cursor():get('waytix', 'config', 'sub_link') or ''%>" />
                        <button id="btn-update-servers" class="cbi-button cbi-button-apply"><%:Обновить%></button>
                        <div id="update-status" class="cbi-value-description" style="display: inline-block; margin-left: 10px"></div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="cbi-section-node">
            <div class="table">
                <div class="tr">
                    <div class="td left" width="33%"><%:Статус:%></div>
                    <div class="td left">
                        <span id="vpn-status"><em><%:Загрузка...%></em></span>
                    </div>
                </div>
                <div class="tr">
                    <div class="td left"><%:Текущий сервер:%></div>
                    <div class="td left">
                        <span id="current-server">-</span>
                    </div>
                </div>
            </div>
            
            <div class="cbi-page-actions" style="margin-top: 1em">
                <button class="cbi-button cbi-button-apply" id="btn-toggle">
                    <%:Подключиться%>
                </button>
                <button class="cbi-button" id="btn-update">
                    <%:Обновить список серверов%>
                </button>
            </div>
        </div>
    </div>
</div>

<%+themes/bootstrap/footer%>

<script type="text/javascript">
//<![CDATA[
    'use strict';
    
    // Функция для обновления списка серверов
    function updateServers() {
        var btn = document.getElementById('btn-update-servers');
        var statusEl = document.getElementById('update-status');
        var subLink = document.getElementById('sub-link').value.trim();
        
        if (!subLink) {
            statusEl.textContent = 'Введите ссылку на подписку';
            statusEl.style.color = 'red';
            return;
        }
        
        btn.disabled = true;
        statusEl.textContent = 'Обновление списка серверов...';
        statusEl.style.color = 'inherit';
        
        // Сохраняем ссылку в конфиг
        XHR.post('<%=luci.dispatcher.build_url("admin/services/waytix/savesub")%>', 
            'sub_link=' + encodeURIComponent(subLink) + '&token=' + encodeURIComponent('<%=luci.http.getenv("HTTP_X_CSRF_TOKEN")%>'),
            function(xhr, status) {
                try {
                    var data = JSON.parse(xhr.responseText);
                    if (data.success) {
                        // Обновляем список серверов
                        XHR.get('<%=luci.dispatcher.build_url("admin/services/waytix/update")%>', null,
                            function(xhr, status) {
                                var data = JSON.parse(xhr.responseText);
                                if (data.success) {
                                    statusEl.textContent = 'Список серверов обновлен: ' + data.message;
                                    statusEl.style.color = 'green';
                                    // Перезагружаем страницу для отображения обновленного списка
                                    window.location.reload();
                                } else {
                                    statusEl.textContent = 'Ошибка обновления списка серверов';
                                    statusEl.style.color = 'red';
                                }
                                btn.disabled = false;
                            }
                        );
                    } else {
                        statusEl.textContent = 'Ошибка сохранения ссылки: ' + (data.message || 'Неизвестная ошибка');
                        statusEl.style.color = 'red';
                        btn.disabled = false;
                    }
                } catch (e) {
                    console.error('Ошибка при обновлении серверов:', e);
                    statusEl.textContent = 'Ошибка: ' + e.message;
                    statusEl.style.color = 'red';
                    btn.disabled = false;
                }
            }
        );
    }
    
    // Обработчик кнопки обновления
    document.addEventListener('DOMContentLoaded', function() {
        var btnUpdate = document.getElementById('btn-update-servers');
        if (btnUpdate) {
            btnUpdate.addEventListener('click', updateServers);
        }
        
        // Остальные обработчики...
        var btnToggle = document.getElementById('btn-toggle');
        if (btnToggle) btnToggle.addEventListener('click', toggleConnection);
        
        // Обновляем статус каждые 5 секунд
        updateStatus();
        setInterval(updateStatus, 5000);
    });
    
    var isConnected = false;
    var currentServer = '';
    
    function updateStatus() {
        XHR.get('<%=luci.dispatcher.build_url("admin/services/waytix/status")%>', null, 
            function(xhr, status) {
                try {
                    var data = JSON.parse(xhr.responseText);
                    isConnected = data.running;
                    currentServer = data.server || '-';
                    
                    document.getElementById('vpn-status').innerHTML = isConnected ? 
                        '<span style="color: green"><%:Подключено%></span>' : 
                        '<span style="color: red"><%:Отключено%></span>';
                        
                    document.getElementById('current-server').textContent = currentServer;
                    
                    var btnToggle = document.getElementById('btn-toggle');
                    if (isConnected) {
                        btnToggle.classList.remove('cbi-button-apply');
                        btnToggle.classList.add('cbi-button-remove');
                        btnToggle.textContent = '<%:Отключиться%>';
                    } else {
                        btnToggle.classList.remove('cbi-button-remove');
                        btnToggle.classList.add('cbi-button-apply');
                        btnToggle.textContent = '<%:Подключиться%>';
                    }
                } catch (e) {
                    console.error('Ошибка обновления статуса:', e);
                }
            }
        );
    }
    
    function toggleConnection() {
        var btn = this;
        btn.disabled = true;
        
        XHR.post('<%=luci.dispatcher.build_url("admin/services/waytix/toggle")%>', 
            'token=' + encodeURIComponent('<%=luci.http.getenv("HTTP_X_CSRF_TOKEN")%>'),
            function(xhr, status) {
                btn.disabled = false;
                updateStatus();
            }
        );
    }
    
    function updateServers() {
        var btn = this;
        btn.disabled = true;
        
        XHR.post('<%=luci.dispatcher.build_url("admin/services/waytix/update")%>', 
            'token=' + encodeURIComponent('<%=luci.http.getenv("HTTP_X_CSRF_TOKEN")%>'),
            function(xhr, status) {
                btn.disabled = false;
                var data = JSON.parse(xhr.responseText);
                if (data.success) {
                    alert('<%:Список серверов успешно обновлен%>');
                } else {
                    alert('<%:Ошибка при обновлении списка серверов%>');
                }
            }
        );
    }
    
    // Инициализация
    document.addEventListener('DOMContentLoaded', function() {
        var btnToggle = document.getElementById('btn-toggle');
        var btnUpdate = document.getElementById('btn-update');
        
        if (btnToggle) btnToggle.addEventListener('click', toggleConnection);
        if (btnUpdate) btnUpdate.addEventListener('click', updateServers);
        
        // Обновляем статус каждые 5 секунд
        updateStatus();
        setInterval(updateStatus, 5000);
    });
//]]>
</script>
            if (xhr.readyState === 4) {
                window.location.reload();
            }
        };
        xhr.send();
    }
</script>
